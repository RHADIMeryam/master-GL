// Generated by view binder compiler. Do not edit!
package com.example.tp2android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.tp2android.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button monBouton1;

  @NonNull
  public final Button monBouton2;

  @NonNull
  public final Button monBouton5;

  @NonNull
  public final Button monBoutton3;

  @NonNull
  public final Button monBoutton4;

  @NonNull
  public final Button monBoutton6;

  @NonNull
  public final Button monBoutton7;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView, @NonNull Button monBouton1,
      @NonNull Button monBouton2, @NonNull Button monBouton5, @NonNull Button monBoutton3,
      @NonNull Button monBoutton4, @NonNull Button monBoutton6, @NonNull Button monBoutton7) {
    this.rootView = rootView;
    this.monBouton1 = monBouton1;
    this.monBouton2 = monBouton2;
    this.monBouton5 = monBouton5;
    this.monBoutton3 = monBoutton3;
    this.monBoutton4 = monBoutton4;
    this.monBoutton6 = monBoutton6;
    this.monBoutton7 = monBoutton7;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.monBouton1;
      Button monBouton1 = ViewBindings.findChildViewById(rootView, id);
      if (monBouton1 == null) {
        break missingId;
      }

      id = R.id.monBouton2;
      Button monBouton2 = ViewBindings.findChildViewById(rootView, id);
      if (monBouton2 == null) {
        break missingId;
      }

      id = R.id.monBouton5;
      Button monBouton5 = ViewBindings.findChildViewById(rootView, id);
      if (monBouton5 == null) {
        break missingId;
      }

      id = R.id.monBoutton3;
      Button monBoutton3 = ViewBindings.findChildViewById(rootView, id);
      if (monBoutton3 == null) {
        break missingId;
      }

      id = R.id.monBoutton4;
      Button monBoutton4 = ViewBindings.findChildViewById(rootView, id);
      if (monBoutton4 == null) {
        break missingId;
      }

      id = R.id.monBoutton6;
      Button monBoutton6 = ViewBindings.findChildViewById(rootView, id);
      if (monBoutton6 == null) {
        break missingId;
      }

      id = R.id.monBoutton7;
      Button monBoutton7 = ViewBindings.findChildViewById(rootView, id);
      if (monBoutton7 == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, monBouton1, monBouton2,
          monBouton5, monBoutton3, monBoutton4, monBoutton6, monBoutton7);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
