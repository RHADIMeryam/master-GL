// Generated by view binder compiler. Do not edit!
package com.example.tp2android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.tp2android.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class GeolocalisationBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout LinearLayout01;

  @NonNull
  public final RelativeLayout RelativeLayout01;

  @NonNull
  public final TextView TextView01;

  @NonNull
  public final TextView TextView02;

  @NonNull
  public final TextView TextView03;

  @NonNull
  public final TextView adresse;

  @NonNull
  public final Button afficherAdresse;

  @NonNull
  public final EditText altitude;

  @NonNull
  public final Button choixSource;

  @NonNull
  public final EditText latitude;

  @NonNull
  public final EditText longitude;

  @NonNull
  public final Button obtenirPosition;

  private GeolocalisationBinding(@NonNull ConstraintLayout rootView,
      @NonNull LinearLayout LinearLayout01, @NonNull RelativeLayout RelativeLayout01,
      @NonNull TextView TextView01, @NonNull TextView TextView02, @NonNull TextView TextView03,
      @NonNull TextView adresse, @NonNull Button afficherAdresse, @NonNull EditText altitude,
      @NonNull Button choixSource, @NonNull EditText latitude, @NonNull EditText longitude,
      @NonNull Button obtenirPosition) {
    this.rootView = rootView;
    this.LinearLayout01 = LinearLayout01;
    this.RelativeLayout01 = RelativeLayout01;
    this.TextView01 = TextView01;
    this.TextView02 = TextView02;
    this.TextView03 = TextView03;
    this.adresse = adresse;
    this.afficherAdresse = afficherAdresse;
    this.altitude = altitude;
    this.choixSource = choixSource;
    this.latitude = latitude;
    this.longitude = longitude;
    this.obtenirPosition = obtenirPosition;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static GeolocalisationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static GeolocalisationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.geolocalisation, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static GeolocalisationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.LinearLayout01;
      LinearLayout LinearLayout01 = ViewBindings.findChildViewById(rootView, id);
      if (LinearLayout01 == null) {
        break missingId;
      }

      id = R.id.RelativeLayout01;
      RelativeLayout RelativeLayout01 = ViewBindings.findChildViewById(rootView, id);
      if (RelativeLayout01 == null) {
        break missingId;
      }

      id = R.id.TextView01;
      TextView TextView01 = ViewBindings.findChildViewById(rootView, id);
      if (TextView01 == null) {
        break missingId;
      }

      id = R.id.TextView02;
      TextView TextView02 = ViewBindings.findChildViewById(rootView, id);
      if (TextView02 == null) {
        break missingId;
      }

      id = R.id.TextView03;
      TextView TextView03 = ViewBindings.findChildViewById(rootView, id);
      if (TextView03 == null) {
        break missingId;
      }

      id = R.id.adresse;
      TextView adresse = ViewBindings.findChildViewById(rootView, id);
      if (adresse == null) {
        break missingId;
      }

      id = R.id.afficherAdresse;
      Button afficherAdresse = ViewBindings.findChildViewById(rootView, id);
      if (afficherAdresse == null) {
        break missingId;
      }

      id = R.id.altitude;
      EditText altitude = ViewBindings.findChildViewById(rootView, id);
      if (altitude == null) {
        break missingId;
      }

      id = R.id.choix_source;
      Button choixSource = ViewBindings.findChildViewById(rootView, id);
      if (choixSource == null) {
        break missingId;
      }

      id = R.id.latitude;
      EditText latitude = ViewBindings.findChildViewById(rootView, id);
      if (latitude == null) {
        break missingId;
      }

      id = R.id.longitude;
      EditText longitude = ViewBindings.findChildViewById(rootView, id);
      if (longitude == null) {
        break missingId;
      }

      id = R.id.obtenir_position;
      Button obtenirPosition = ViewBindings.findChildViewById(rootView, id);
      if (obtenirPosition == null) {
        break missingId;
      }

      return new GeolocalisationBinding((ConstraintLayout) rootView, LinearLayout01,
          RelativeLayout01, TextView01, TextView02, TextView03, adresse, afficherAdresse, altitude,
          choixSource, latitude, longitude, obtenirPosition);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
