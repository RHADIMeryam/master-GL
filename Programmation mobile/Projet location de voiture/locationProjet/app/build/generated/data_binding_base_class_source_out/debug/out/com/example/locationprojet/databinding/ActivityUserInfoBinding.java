// Generated by view binder compiler. Do not edit!
package com.example.locationprojet.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.locationprojet.R;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityUserInfoBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextInputLayout emailV;

  @NonNull
  public final TextInputLayout numeroV;

  @NonNull
  public final Button retour;

  @NonNull
  public final TextInputLayout typeV;

  @NonNull
  public final TextInputLayout usernameV;

  private ActivityUserInfoBinding(@NonNull LinearLayout rootView, @NonNull TextInputLayout emailV,
      @NonNull TextInputLayout numeroV, @NonNull Button retour, @NonNull TextInputLayout typeV,
      @NonNull TextInputLayout usernameV) {
    this.rootView = rootView;
    this.emailV = emailV;
    this.numeroV = numeroV;
    this.retour = retour;
    this.typeV = typeV;
    this.usernameV = usernameV;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityUserInfoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityUserInfoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_user_info, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityUserInfoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.emailV;
      TextInputLayout emailV = ViewBindings.findChildViewById(rootView, id);
      if (emailV == null) {
        break missingId;
      }

      id = R.id.numeroV;
      TextInputLayout numeroV = ViewBindings.findChildViewById(rootView, id);
      if (numeroV == null) {
        break missingId;
      }

      id = R.id.retour;
      Button retour = ViewBindings.findChildViewById(rootView, id);
      if (retour == null) {
        break missingId;
      }

      id = R.id.typeV;
      TextInputLayout typeV = ViewBindings.findChildViewById(rootView, id);
      if (typeV == null) {
        break missingId;
      }

      id = R.id.usernameV;
      TextInputLayout usernameV = ViewBindings.findChildViewById(rootView, id);
      if (usernameV == null) {
        break missingId;
      }

      return new ActivityUserInfoBinding((LinearLayout) rootView, emailV, numeroV, retour, typeV,
          usernameV);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
