// Generated by view binder compiler. Do not edit!
package com.example.locationprojet.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.locationprojet.R;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityInscriptionBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final RadioButton acheteur;

  @NonNull
  public final RadioButton annonceur;

  @NonNull
  public final TextInputLayout emailI;

  @NonNull
  public final Button inscrire;

  @NonNull
  public final TextInputLayout numeroI;

  @NonNull
  public final TextInputLayout passwordI;

  @NonNull
  public final Button seConnecter;

  @NonNull
  public final TextInputLayout usernameI;

  private ActivityInscriptionBinding(@NonNull LinearLayout rootView, @NonNull RadioButton acheteur,
      @NonNull RadioButton annonceur, @NonNull TextInputLayout emailI, @NonNull Button inscrire,
      @NonNull TextInputLayout numeroI, @NonNull TextInputLayout passwordI,
      @NonNull Button seConnecter, @NonNull TextInputLayout usernameI) {
    this.rootView = rootView;
    this.acheteur = acheteur;
    this.annonceur = annonceur;
    this.emailI = emailI;
    this.inscrire = inscrire;
    this.numeroI = numeroI;
    this.passwordI = passwordI;
    this.seConnecter = seConnecter;
    this.usernameI = usernameI;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityInscriptionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityInscriptionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_inscription, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityInscriptionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.acheteur;
      RadioButton acheteur = ViewBindings.findChildViewById(rootView, id);
      if (acheteur == null) {
        break missingId;
      }

      id = R.id.annonceur;
      RadioButton annonceur = ViewBindings.findChildViewById(rootView, id);
      if (annonceur == null) {
        break missingId;
      }

      id = R.id.emailI;
      TextInputLayout emailI = ViewBindings.findChildViewById(rootView, id);
      if (emailI == null) {
        break missingId;
      }

      id = R.id.inscrire;
      Button inscrire = ViewBindings.findChildViewById(rootView, id);
      if (inscrire == null) {
        break missingId;
      }

      id = R.id.numeroI;
      TextInputLayout numeroI = ViewBindings.findChildViewById(rootView, id);
      if (numeroI == null) {
        break missingId;
      }

      id = R.id.passwordI;
      TextInputLayout passwordI = ViewBindings.findChildViewById(rootView, id);
      if (passwordI == null) {
        break missingId;
      }

      id = R.id.seConnecter;
      Button seConnecter = ViewBindings.findChildViewById(rootView, id);
      if (seConnecter == null) {
        break missingId;
      }

      id = R.id.usernameI;
      TextInputLayout usernameI = ViewBindings.findChildViewById(rootView, id);
      if (usernameI == null) {
        break missingId;
      }

      return new ActivityInscriptionBinding((LinearLayout) rootView, acheteur, annonceur, emailI,
          inscrire, numeroI, passwordI, seConnecter, usernameI);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
