// Generated by view binder compiler. Do not edit!
package com.example.locationprojet.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.locationprojet.R;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DetailVoitureBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextInputLayout addrHolder;

  @NonNull
  public final Button appel;

  @NonNull
  public final TextInputLayout desciptionHolder;

  @NonNull
  public final ImageView imgHolder;

  @NonNull
  public final TextInputLayout modeleHolder;

  @NonNull
  public final TextInputLayout nomHolder;

  @NonNull
  public final TextInputLayout numeroHolder;

  @NonNull
  public final TextInputLayout prixHolder;

  private DetailVoitureBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextInputLayout addrHolder, @NonNull Button appel,
      @NonNull TextInputLayout desciptionHolder, @NonNull ImageView imgHolder,
      @NonNull TextInputLayout modeleHolder, @NonNull TextInputLayout nomHolder,
      @NonNull TextInputLayout numeroHolder, @NonNull TextInputLayout prixHolder) {
    this.rootView = rootView;
    this.addrHolder = addrHolder;
    this.appel = appel;
    this.desciptionHolder = desciptionHolder;
    this.imgHolder = imgHolder;
    this.modeleHolder = modeleHolder;
    this.nomHolder = nomHolder;
    this.numeroHolder = numeroHolder;
    this.prixHolder = prixHolder;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DetailVoitureBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DetailVoitureBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.detail_voiture, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DetailVoitureBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addrHolder;
      TextInputLayout addrHolder = ViewBindings.findChildViewById(rootView, id);
      if (addrHolder == null) {
        break missingId;
      }

      id = R.id.appel;
      Button appel = ViewBindings.findChildViewById(rootView, id);
      if (appel == null) {
        break missingId;
      }

      id = R.id.desciptionHolder;
      TextInputLayout desciptionHolder = ViewBindings.findChildViewById(rootView, id);
      if (desciptionHolder == null) {
        break missingId;
      }

      id = R.id.imgHolder;
      ImageView imgHolder = ViewBindings.findChildViewById(rootView, id);
      if (imgHolder == null) {
        break missingId;
      }

      id = R.id.modeleHolder;
      TextInputLayout modeleHolder = ViewBindings.findChildViewById(rootView, id);
      if (modeleHolder == null) {
        break missingId;
      }

      id = R.id.nomHolder;
      TextInputLayout nomHolder = ViewBindings.findChildViewById(rootView, id);
      if (nomHolder == null) {
        break missingId;
      }

      id = R.id.numeroHolder;
      TextInputLayout numeroHolder = ViewBindings.findChildViewById(rootView, id);
      if (numeroHolder == null) {
        break missingId;
      }

      id = R.id.prixHolder;
      TextInputLayout prixHolder = ViewBindings.findChildViewById(rootView, id);
      if (prixHolder == null) {
        break missingId;
      }

      return new DetailVoitureBinding((ConstraintLayout) rootView, addrHolder, appel,
          desciptionHolder, imgHolder, modeleHolder, nomHolder, numeroHolder, prixHolder);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
